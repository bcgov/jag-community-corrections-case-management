openapi: 3.0.0
info:
  description: CCCM API
  title: Community Corrections Case Management API
  version: 0.0.1
servers:
  - url: http://localhost:8080
tags:
  - description: Endpoints for client data
    name: clients
  - description: Endpoints for form data
    name: forms
  - description: Endpoints for code tables data
    name: lookups
  - description: Endpoints for dashboards
    name: dashboards
paths:
  /clients:
    get:
      operationId: SearchClients
      parameters:
        - in: query
          name: lastName
          schema:
            type: string
        - in: query
          name: soundex
          schema:
            type: boolean
        - in: query
          name: givenName
          schema:
            type: string
        - in: query
          name: birthYear
          schema:
            type: integer
        - in: query
          name: age
          schema:
            type: integer
        - in: query
          name: range
          schema:
            type: integer
        - in: query
          name: address
          schema:
            type: string
        - in: query
          name: location
          schema:
            type: string
        - in: query
          name: gender
          schema:
            type: string
        - in: query
          name: identifierType
          schema:
            type: string
        - in: query
          name: identifier
          schema:
            type: string
        - in: query
          name: officer
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientList'
          description: get all forms
      summary: search for clients
      tags:
        - clients
      x-accepts: application/json
      x-tags:
        - tag: clients
  /clients/{clientId}/photo:
    get:
      operationId: GetClientPhoto
      parameters:
        - explode: false
          in: path
          name: clientId
          required: true
          schema:
            type: number
          style: simple
      responses:
        "200":
          description: get client photo
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Photo'
      tags:
        - clients
  /clients/{clientNum}:
    get:
      operationId: GetClient
      parameters:
        - explode: false
          in: path
          name: clientNum
          required: true
          schema:
            type: string
          style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Client'
          description: get a client
      tags:
        - clients
  /dashboards/supervisor:
    get:
      operationId: GetSupervisorDashboard
      parameters:
        - in: query
          name: userId
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SupervisorDashboard'
          description: get get supervisor dahsboard
      summary: get supervisor dashboard
      tags:
        - dashboards
      x-accepts: application/json
      x-tags:
        - tag: dashboards
  /forms:
    get:
      operationId: GetForms
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FormList'
          description: get all forms
      summary: get all forms
      tags:
        - forms
      x-accepts: application/json
      x-tags:
        - tag: forms
    post:
      operationId: Add Form
      requestBody:
        content:
          application/json:
            schema:
              type: string
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FormDetails'
          description: Form was added
      summary: Add
      tags:
        - forms
      x-contentType: application/json
      x-accepts: application/json
      x-tags:
        - tag: forms
    put:
      operationId: Update Form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FormDetails'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FormDetails'
          description: Form was updated
      summary: Update
      tags:
        - forms
      x-contentType: application/json
      x-accepts: application/json
      x-tags:
        - tag: forms
  /forms/formSearch:
    get:
      operationId: GetFormSearch
      parameters:
        - in: query
          name: clientNum
          required: true
          schema:
            type: string
        - in: query
          name: formTypeCd
          required: false
          schema:
            type: string
        - in: query
          name: currentPeriod
          required: true
          schema:
            type: boolean
            default: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FormSearchList'
          description: get all forms
      summary: get all forms
      tags:
        - forms
      x-accepts: application/json
      x-tags:
        - tag: forms
  /forms/{formId}:
    delete:
      operationId: DeleteForm
      parameters:
        - explode: false
          in: path
          name: formId
          required: true
          schema:
            type: number
          style: simple
      responses:
        "200":
          description: form was deleted
      summary: delete form by id
      tags:
        - forms
      x-accepts: application/json
      x-tags:
        - tag: forms
    get:
      operationId: GetFormById
      parameters:
        - explode: false
          in: path
          name: formId
          required: true
          schema:
            type: number
          style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FormDetails'
          description: form found
        "404":
          description: form not found
      summary: get a form by id
      tags:
        - forms
      x-accepts: application/json
      x-tags:
        - tag: forms
  /forms/{formId}/question:
    post:
      operationId: AddQuestionAnswer
      parameters:
        - explode: false
          in: path
          name: formId
          required: true
          schema:
            type: number
          style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FormQuestionAnswer'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FormQuestionAnswer'
          description: form question answer created
      summary: add a form question
      tags:
        - forms
      x-accepts: application/json
      x-tags:
        - tag: forms
    put:
      operationId: UpdateQuestionAnswer
      parameters:
        - explode: false
          in: path
          name: formId
          required: true
          schema:
            type: number
          style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FormQuestionAnswer'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FormQuestionAnswer'
          description: form question answer updated
      summary: update an existing form question answer
      tags:
        - forms
      x-accepts: application/json
      x-tags:
        - tag: forms
  /forms/{formType}:
    get:
      operationId: GetFormByType
      parameters:
        - explode: false
          in: path
          name: formType
          required: true
          schema:
            type: string
          style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FormDetails'
          description: form found
        "404":
          description: form not found
      summary: get a form by type
      tags:
        - forms
      x-accepts: application/json
      x-tags:
        - tag: forms
  /lookup/formtypes:
    get:
      operationId: GetFormTypes
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CodeList'
          description: get all Form Types
      summary: get all form types
      tags:
        - lookups
      x-accepts: application/json
      x-tags:
        - tag: lookups
  /lookup/locations:
    get:
      operationId: GetLocations
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CodeList'
          description: get all locations
      summary: get all locations
      tags:
        - lookups
      x-accepts: application/json
      x-tags:
        - tag: lookups
  /lookup/genders:
    get:
      operationId: GetGenders
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CodeList'
          description: get all genders
      summary: get all genders
      tags:
        - lookups
      x-accepts: application/json
      x-tags:
        - tag: lookups
  /lookup/identifiers:
    get:
      operationId: GetIdentifiers
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CodeList'
          description: get all identifiers
      summary: get all identifiers
      tags:
        - lookups
      x-accepts: application/json
      x-tags:
        - tag: lookups
  /lookup/address:
    get:
      operationId: GetAddress
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CodeList'
          description: get all address types
      summary: get all address types
      tags:
        - lookups
      x-accepts: application/json
      x-tags:
        - tag: lookups
components:
  schemas:
    FormDetails:
      description: Client
      properties:
        formId:
          type: number
        formClientId:
          type: number
        createdBy:
          type: string
        createdDate:
          format: date
          type: string
        updateDate:
          format: date
          type: string
        completedDate:
          format: date
          type: string
        formType:
          type: string
        formTitle:
          type: string
        formStatus:
          type: string
        crnacmp_types:
          allOf:
            - $ref: '#/components/schemas/CRNAType'
            - type: object
        rightPanel:
          type: array
          items:
            $ref: '#/components/schemas/SideCard'
        saveBtnGroup:
          allOf:
            - $ref: '#/components/schemas/ButtonGroup'
            - type: object
        saveDraftBtnGroup:
          allOf:
            - $ref: '#/components/schemas/ButtonGroup'
            - type: object
        data:
          type: array
          items:
            $ref: '#/components/schemas/FormSections'
      type: object
    CRNAType:
      type: object
      properties:
        type:
          type: string
        data:
          type: object
          properties:
            values:
              type: array
              items:
                type: object
                properties:
                  value:
                    type: string
                  label:
                    type: string
    SideCard:
      type: object
      properties:
        type:
          type: string
        contentType:
          type: string
        panelTitle:
          type: string
        panelKey:
          type: string
        contentKey:
          type: string
        dataArray:
          type: array
          items:
            type: string
        dataMatrix:
          type: array
          items:
            type: array
            items:
              type: string
        dataString:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        csNumber:
          type: string
        gender:
          type: string
        dob:
          type: string
        location:
          type: string
        finalOrderExpDate:
          type: string
        button:
          allOf:
            - $ref: '#/components/schemas/Button'
            - type: object
    Button:
      type: object
      properties:
        type:
          type: string
        action:
          type: string
        key:
          type: string
        label:
          type: string
        theme:
          type: string
    ButtonGroup:
      type: object
      properties:
        type:
          type: string
        button:
          type: array
          items:
            $ref: '#/components/schemas/Button'
    FormSections:
      type: object
      properties:
        section:
          type: string
        sideCardPanelHiddenList:
          type: array
          items:
            type: string
        subNavOnOff:
          type: string
        subsections:
          type: array
          items:
            $ref: '#/components/schemas/FormSubSections'
    FormSubSections:
      type: object
      properties:
        type:
          type: string
        sectionKey:
          type: string
        subSectionKey:
          type: string
        sectionTitle:
          type: string
        sectionSubTitle:
          type: string
        questionLabel:
          type: string
        label:
          type: string
        label_textarea:
          type: string
        key:
          type: string
        defaultValue:
          type: string
        values:
          type: array
          items:
            $ref: "#/components/schemas/QuestionBody"
        comments:
          allOf:
            - $ref: '#/components/schemas/CommentsArea'
            - type: object
        interventionNeeded:
          allOf:
            - $ref: '#/components/schemas/InterventionArea'
            - type: object
        questionId:
          type: number
        questionAnswerClientId:
          type: number
        questionAnswer:
          type: string
    QuestionBody:
      properties:
        label:
          type: string
        value:
          type: string
        shortcut:
          type: string
    CommentsArea:
      type: object
      properties:
        type:
          type: string
        key:
          type: string
    InterventionArea:
      type: object
      properties:
        type:
          type: string
        key:
          type: string
        defaultValue:
          type: boolean
    FormList:
      example:
        items:
          - formId: 0.8008281904610115
            updateDate: 2000-01-23
            formType: formType
            createdDate: 2000-01-23
            createdBy: createdBy
            completedDate: 2000-01-23
          - formId: 0.8008281904610115
            updateDate: 2000-01-23
            formType: formType
            createdDate: 2000-01-23
            createdBy: createdBy
            completedDate: 2000-01-23
      properties:
        items:
          description: FormDetails
          items:
            $ref: '#/components/schemas/FormDetails'
          type: array
      type: object
    Component:
      type: object
      properties:
        key:
          type: string
        title:
          type: string
        collapsible:
          type: boolean
        label:
          type: string
        inline:
          type: boolean
        tableView:
          type: boolean
        content:
          type: string
        input:
          type: boolean
        type:
          type: string
        tag:
          type: string
        refreshOnChange:
          type: boolean
        disableOnInvalid:
          type: boolean
        components:
          type: array
          items:
            $ref: "#/components/schemas/Component"
        attrs:
          type: array
          items:
            $ref: '#/components/schemas/Attr'
    Attr:
      type: object
      properties:
        attr:
          type: string
        value:
          type: string
    ClientList:
      type: array
      items:
        $ref: '#/components/schemas/Client'
    Client:
      type: object
      properties:
        clientId:
          type: number
        clientNum:
          type: string
        clientName:
          type: string
        gender:
          type: string
        clientAge:
          type: number
        birthDate:
          type: string
        custodyLocation:
          type: string
        supervisionLevel:
          type: string
        photoDate:
          type: string
        dueNext:
          type: string
        dueDate:
          type: string
        communityInformation:
          $ref: "#/components/schemas/CommunityInformation"
        orderInformation:
          $ref: "#/components/schemas/OrderInformation"
        courtInformation:
          $ref: "#/components/schemas/CourtInformation"
        generalInformation:
          $ref: "#/components/schemas/GeneralInformation"
        locationInformation:
          $ref: "#/components/schemas/LocationInformation"
        biometric:
          $ref: "#/components/schemas/Biometric"
        address:
          type: array
          items:
            $ref: "#/components/schemas/Address"
        designations:
          type: array
          items:
            $ref: "#/components/schemas/Designation"
        outstandingWarrants:
          type: array
          items:
            $ref: "#/components/schemas/Warrant"
        communityAlerts:
          type: array
          items:
            $ref: "#/components/schemas/Alert"
        programs:
          type: array
          items:
            $ref: "#/components/schemas/Program"
        alias:
          type: array
          items:
            $ref: "#/components/schemas/Alias"
    Alias:
      type: object
      properties:
        fullName:
          type: string
    CommunityInformation:
      type: object
      properties:
        communityLocation:
          type: string
        status:
          type: string
        caseManager:
          type: string
        secondaryManager:
          type: string
    OrderInformation:
      type: object
      properties:
        orders:
          type: string
        effectiveDate:
          type: string
        expiryDate:
          type: string
        dueDate:
          type: string
    CourtInformation:
      type: object
      properties:
        court:
          type: string
        effectiveDate:
          type: string
        expiryDate:
          type: string
        dueDate:
          type: string
    Biometric:
      type: object
      properties:
        type:
          type: string
        status:
          type: string
        eServices:
          type: string
        eReporting:
          type: string
    GeneralInformation:
      type: object
      properties:
        institution:
          type: string
        status:
          type: string
        custody:
          type: string
        dischargeDate:
          type: string
        type:
          type: string
        paroleDate:
          type: string
    LocationInformation:
      type: object
      properties:
        internalLocation:
          type: string
        federalParole:
          type: string
        outLocation:
          type: string
        outReason:
          type: string
        warrantExpiryDate:
          type: string
    Designation:
      type: object
      properties:
        type:
          type: string
        rating:
          type: string
    Warrant:
      type: object
      properties:
        type:
          type: string
        date:
          type: string
        courtFile:
          type: string
    Alert:
      type: object
      properties:
        comment:
          type: string
        date:
          type: string
    Address:
      type: object
      properties:
        type:
          type: string
        expired:
          type: boolean
        sealed:
          type: boolean
        street:
          type: string
        city:
          type: string
        postalCode:
          type: string
    Program:
      type: object
      properties:
        name:
          type: string
        status:
          type: string
        referredDate:
          type: string
        startDate:
          type: string
        outcome:
          type: string
    Form:
      type: object
      properties:
        type:
          type: string
        assessmentStatus:
          type: string
        status:
          type: string
        updateDate:
          type: string
        createdLocation:
          type: string
        completedBy:
          type: string
        supervisionRating:
          type: string
        crnaRating:
          type: string
        saraRating:
          type: string
    FormSearchList:
      properties:
        items:
          description: Form Search Results
          items:
            $ref: '#/components/schemas/Form'
          type: array
      type: object
    Photo:
      type: object
      properties:
        image:
          type: string
          format: byte
    SupervisorDashboard:
      type: object
      properties:
        officer:
          type: string
        activeAdmin:
          type: number
        adminClosed:
          type: number
        bal:
          type: number
        high:
          type: number
        medium:
          type: number
        low:
          type: number
        unknown:
          type: number
        overdue:
          type: number
        activeReports:
          type: number
        pcm:
          type: number
        scm:
          type: number
        smo:
          type: number
        closedIncomplete:
          type: number
        expiringThirty:
          type: number
        notRequired:
          type: number
        dueSeven:
          type: number
    Code:
      type: object
      properties:
        key:
          type: string
        value:
          type: string
    CodeList:
      properties:
        items:
          description: Code Type Results
          items:
            $ref: '#/components/schemas/Code'
          type: array
    FormQuestionAnswer:
      properties:
        formAnswerId:
          type: number
        formQuestionId:
          type: number
        formAnswer:
          type: string

